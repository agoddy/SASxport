?read.xport
help <- function(topic, ...) help(topic)
?read.xport
find("help")
help <- function(topic, ...) utils::help(topic)
?read.xport
x <- read.xport('puromycin.xpt',as.is=TRUE)
x <- read.xport('puromycin.xpt',as.is=0)
str(x)
x <- read.xport('puromycin.xpt',as.is=1)
str(x)
x <- read.xport('puromycin.xpt',as.is=TRUE, verbose=TRUE)
debug(read.xport)
x <- read.xport('puromycin.xpt',as.is=TRUE, verbose=TRUE)
possiblyConvertChar
x <- read.xport('puromycin.xpt',as.is=TRUE, verbose=TRUE)
as.is
is.logical(as.is) && !as.is
as.is
which.regular
nam
formats
read.xport.inner
?as.data.frame
scat <- SASxport:::scat
lookup.xport.inner <- SASxport:::lookup.xport.inner
xport_read <- SASxport:::xport_read
makeNames <- SASxport:::makeNAmes
makeNames <- SASxport:::makeNames
x <- read.xport('puromycin.xpt',as.is=TRUE)
fstr <- SASxport:::fstr
x <- read.xport('puromycin.xpt',as.is=TRUE)
str(x)
debug(read.xport.inner)
x <- read.xport('puromycin.xpt',as.is=TRUE)
ans
as.data.frame(ans)
str(as.data.frame(ans))
str(as.data.frame(ans), stringsAsFactors=FALSE)
.Version
Version()
R.Version()
ans
str(data.frame(ans), stringsAsFactors=FALSE)
str(data.frame(ans, stringsAsFactors=FALSE))
str(asdata.frame(ans, stringsAsFactors=FALSE))
str(as.data.frame(ans, stringsAsFactors=FALSE))
length(ans)
as.data.frame(ans[[1]], stringsAsFactors=FALSE)
str(as.data.frame(ans[[1]], stringsAsFactors=FALSE))
xport_info <- SASxport:::xport_info
x <- read.xport('puromycin.xpt',as.is=TRUE)
str(x)
x <- read.xport('puromycin.xpt',as.is=FALSE)
str(x)
assert
??fail
